name: Verify platform installation
on:
  - push
jobs:
  uv:
    name: uv ${{ matrix.python-version }} / ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      fail-fast: false
      matrix:
        include:
          - { python-version: "3.12", os: ubuntu-latest }
          - { python-version: "3.12", os: macos-latest }
          - { python-version: "3.12", os: windows-latest }
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install uv
        uses: astral-sh/setup-uv@v3
      - name: Install dependencies and run an example
        run: |
          uv sync
          uv run plan-a-trip-to-mars
  pixi:
    name: pixi ${{ matrix.python-version }} / ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      fail-fast: false
      matrix:
        include:
          - { python-version: "3.12", os: ubuntu-latest }
          - { python-version: "3.12", os: macos-latest }
          - { python-version: "3.12", os: windows-latest }
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install pixi and dependencies
        uses: prefix-dev/setup-pixi@v0.8.0
        with:
          pixi-version: v0.30.0
          environments: >-
            spyder
      - name: Run an example
        run: |
          pixi run -e spyder plan-a-trip-to-mars
  conda:
    name: conda ${{ matrix.python-version }} / ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      fail-fast: false
      matrix:
        include:
          - { python-version: "3.12", os: ubuntu-latest }
          - { python-version: "3.12", os: macos-latest }
          - { python-version: "3.12", os: windows-latest }
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Decide conda environment file
        id: install_conda
        run: |
          if [ "${{ matrix.os }}" = "ubuntu-latest" ]; then
            env_file=environment.linux-64.yml
          elif [ "${{ matrix.os }}" = "windows-latest" ]; then
            env_file=environment.win-64.yml
          elif [ "${{ matrix.os }}" = "macos-latest" ]; then
            env_file=environment.osx-64.yml
          fi
          echo "ENV_FILE=$env_file" >> $GITHUB_OUTPUT
      - name: Install (mini)conda
        uses: conda-incubator/setup-miniconda@v3
        with:
          auto-activate-base: true
          auto-update-conda: true
          python-version: ${{ matrix.python-version }}
          environment-file: ${{ steps.install_conda.outputs.ENV_FILE }}
      - name: Run an example
        run: |
          plan-a-trip-to-mars
